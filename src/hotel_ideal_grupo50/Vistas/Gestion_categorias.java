/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hotel_ideal_grupo50.Vistas;

import javax.swing.JOptionPane;
import hotel_ideal_grupo50.AccesoDatos.TipoHabitacionData;
import hotel_ideal_grupo50.Entidades.Tipo_Habitacion;
import hotel_ideal_grupo50.AccesoDatos.HabitacionData;
import hotel_ideal_grupo50.AccesoDatos.HuespedData;
import hotel_ideal_grupo50.AccesoDatos.ReservaData;
import hotel_ideal_grupo50.AccesoDatos.TipoHabitacionData;
import hotel_ideal_grupo50.ClasesExtra.CategoriaItem;
import hotel_ideal_grupo50.Entidades.Huesped;
import java.util.ArrayList;
import java.util.List;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author maks
 */
public class Gestion_categorias extends javax.swing.JInternalFrame {

    
    private TipoHabitacionData dataT;
     private DefaultTableModel modelo;
     private List<Tipo_Habitacion> listaT;
     private List<CategoriaItem> categoriasID;
     private Tipo_Habitacion selec ;
    
    public Gestion_categorias() {
        initComponents();
     
        dataT=new TipoHabitacionData();
        listaT=new ArrayList<>();
        modelo = new DefaultTableModel(){
       
    @Override
    public boolean isCellEditable(int row, int column) {
        
        return false; 
    }
    
};
        categoriasID= dataT.listarCategoriasID();
        selec=new Tipo_Habitacion();
         
    Tabla.getTableHeader().setReorderingAllowed(false);

       
        armarCabeceraTabla();
        listarTodasCategorias ();
        
        
        
        
     SpinnerNumberModel nm = new SpinnerNumberModel();
        nm.setMinimum(0);
        nm.setMaximum(4);
        nm.setStepSize(1);
        jSpinnerCamas.setModel(nm);
        
        SpinnerNumberModel nm1 = new SpinnerNumberModel();
        nm1.setMinimum(0);
        nm1.setMaximum(4);
        nm1.setStepSize(1);
        jSpinnerPersonas.setModel(nm1);
        
        SpinnerNumberModel nm2 = new SpinnerNumberModel();
        nm2.setMinimum(0);
        nm2.setMaximum(4);
        nm2.setStepSize(1);
        jSpinnerCamasEdit.setModel(nm2);
        
        SpinnerNumberModel nm3 = new SpinnerNumberModel();
        nm3.setMinimum(0);
        nm3.setMaximum(4);
        nm3.setStepSize(1);
        jSpinnerpersEdit.setModel(nm3);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        tNomCategoria = new javax.swing.JTextField();
        jSpinnerCamas = new javax.swing.JSpinner();
        jSpinnerPersonas = new javax.swing.JSpinner();
        tTipoCamas = new javax.swing.JTextField();
        tPrecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jSpinnerCamasEdit = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        jSpinnerpersEdit = new javax.swing.JSpinner();
        jLabel10 = new javax.swing.JLabel();
        tTipoCamasEdit = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        tPrecioEdit = new javax.swing.JTextField();
        BEliminar = new javax.swing.JButton();
        bCargar = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jButton3 = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        tNomCategoriaEdit = new javax.swing.JTextField();

        setTitle("Gestión de Categorías");
        setPreferredSize(new java.awt.Dimension(700, 700));

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel2.setText("Cargar nueva categoría:");

        jLabel3.setText("Cant. Camas:");

        jLabel4.setText("Cant. Personas:");

        jLabel5.setText("Tipo de camas:");

        jLabel6.setText("Precio:");

        tPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tPrecioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel7.setText("Modificar Categoría");

        jLabel8.setText("Cant. Camas:");

        jLabel9.setText("Cant. Personas:");

        jLabel10.setText("Tipo de camas:");

        jLabel11.setText("Precio:");

        tPrecioEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tPrecioEditActionPerformed(evt);
            }
        });

        BEliminar.setText("Eliminar");
        BEliminar.setEnabled(false);
        BEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BEliminarActionPerformed(evt);
            }
        });

        bCargar.setText("Cargar");
        bCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCargarActionPerformed(evt);
            }
        });

        jButton3.setText("Modificar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Salir");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Lista de Categorías");

        Tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/hotel_ideal_grupo50/resourses/imgs/actualizar.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tNomCategoriaEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNomCategoriaEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tNomCategoriaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(tPrecioEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSpinnerpersEdit, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSpinnerCamasEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tTipoCamas, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(337, 337, 337)
                        .addComponent(BEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSpinnerPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jSpinnerCamas, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tNomCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(23, 23, 23)
                                        .addComponent(jLabel6)
                                        .addGap(18, 18, 18)
                                        .addComponent(tPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(119, 119, 119)
                                .addComponent(tTipoCamasEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(jButton3)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(41, 41, 41))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(16, 16, 16))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tNomCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(tPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jSpinnerCamas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jSpinnerPersonas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tTipoCamas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bCargar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel11)
                    .addComponent(tPrecioEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tNomCategoriaEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jSpinnerCamasEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jSpinnerpersEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tTipoCamasEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(14, 14, 14)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(BEliminar))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tPrecioActionPerformed

    private void tPrecioEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tPrecioEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tPrecioEditActionPerformed

    private void BEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BEliminarActionPerformed
        if (selec!=null){
        dataT.borrarReserva(selec.getIdTipo());
        } else {
            JOptionPane.showMessageDialog(null, "Para eliminar una reserva debe seleccionarla de la lista.");
        }
    }//GEN-LAST:event_BEliminarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void bCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCargarActionPerformed
    
        

    try {
        String nombre = tNomCategoria.getText();
        int cantCamas = (Integer) jSpinnerCamas.getValue();
        int cantPers = (Integer) jSpinnerPersonas.getValue();
        String precioIng = tPrecio.getText();
        String tipoCamas = tTipoCamas.getText();
        
        if (nombre!=null & cantCamas>0 & cantPers>0 & precioIng!=null & tipoCamas!=null){
        
        if (nombre.matches("^[a-zA-Z\\s]+$")) {
            
            precioIng = precioIng.replace(",", ".");
            precioIng = precioIng.replace("$", "");

            if (precioIng.matches("^[0-9]+(\\.[0-9]+)?$")) {
                try {
                    double precio = Double.parseDouble(precioIng);
                    
                    Tipo_Habitacion categoriaNueva = new Tipo_Habitacion(nombre, cantCamas, cantPers, tipoCamas, precio);
                    dataT.crearTipoHabitacion(categoriaNueva);

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "No se pudo convertir el precio a un número.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa un número válido en el campo de precio.");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Ingresa solo caracteres de texto en 'Cargar nueva categoría', se espera un nombre.");
        }
        }else {
            JOptionPane.showMessageDialog(null, "Ninguno de los campos puede estar vacío o en valor cero.");
        }
    } catch (Exception ex) {
        JOptionPane.showMessageDialog(null, "No se pudo cargar la categoría." + ex);
    }
    

    }//GEN-LAST:event_bCargarActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         DefaultTableModel model = (DefaultTableModel) Tabla.getModel();
        model.setRowCount(0); // Elimina todas las filas de la tabla
        listarTodasCategorias(); // Vuelve a listar los datos
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       
        
        try {
        
           
           int id = selec.getIdTipo();
        
        String nombre = tNomCategoriaEdit.getText();
        int cantCamas = (Integer) jSpinnerCamasEdit.getValue();
        int cantPers = (Integer) jSpinnerpersEdit.getValue();
        String precioIng = tPrecioEdit.getText();
        String tipoCamas = tTipoCamasEdit.getText();
        if (nombre!=null & cantCamas>0 & cantPers>0 & precioIng!=null & tipoCamas!=null){
        
        
            precioIng = precioIng.replace(",", ".");
            precioIng = precioIng.replace("$", "");
            if (precioIng.matches("^[0-9]+(\\.[0-9]+)?$")) {
                try {
                    double precio = Double.parseDouble(precioIng);
                    
                    Tipo_Habitacion categoriaNueva = new Tipo_Habitacion(nombre, cantCamas, cantPers, tipoCamas, precio);
                    dataT.modificarCategoria(id, categoriaNueva);

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(null, "No se pudo convertir el precio a un número.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Ingresa un número válido en el campo de precio.");
            }
        
        }else {
            JOptionPane.showMessageDialog(null, "Ninguno de los campos puede estar vacío o en valor cero.");
        }    
            
        } catch (Exception ex){
            JOptionPane.showMessageDialog(null, "No se pudo modificar la categoría." + ex);
        }
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tNomCategoriaEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNomCategoriaEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNomCategoriaEditActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BEliminar;
    private javax.swing.JTable Tabla;
    private javax.swing.JButton bCargar;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSpinner jSpinnerCamas;
    private javax.swing.JSpinner jSpinnerCamasEdit;
    private javax.swing.JSpinner jSpinnerPersonas;
    private javax.swing.JSpinner jSpinnerpersEdit;
    private javax.swing.JTextField tNomCategoria;
    private javax.swing.JTextField tNomCategoriaEdit;
    private javax.swing.JTextField tPrecio;
    private javax.swing.JTextField tPrecioEdit;
    private javax.swing.JTextField tTipoCamas;
    private javax.swing.JTextField tTipoCamasEdit;
    // End of variables declaration//GEN-END:variables
private void armarCabeceraTabla() {
        ArrayList<Object> filaCabecera =new ArrayList<>();
        filaCabecera.add("ID");
        filaCabecera.add("Categoría");
        filaCabecera.add("Camas");
        filaCabecera.add("Personas");
        filaCabecera.add("Tipo de camas");
        filaCabecera.add("Precio");
     
        
    for (Object it : filaCabecera) {
        modelo.addColumn(it);
    }
    Tabla.setModel(modelo);
    Tabla.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
    public void valueChanged(ListSelectionEvent e) {
        int filaSelec = Tabla.getSelectedRow();
        if (filaSelec != -1) {
            selec = listaT.get(filaSelec); // Obtiene el objeto categoria desde tu lista
            tNomCategoriaEdit.setText(selec.getCategoria());
            jSpinnerCamasEdit.setValue(selec.getCantidadCamas());
            jSpinnerpersEdit.setValue(selec.getCantidadPersonas());
            tTipoCamasEdit.setText(selec.getTipoCamas());
            tPrecioEdit.setText(String.format("$%.2f",selec.getPrecio()));
            
            BEliminar.setEnabled(true);
        } else {
            BEliminar.setEnabled(false);
        }
    
    }
       
});
        
    }

private void listarTodasCategorias () {
    
    
        listaT= (ArrayList) dataT.listarCategorias();
       
        for (Tipo_Habitacion m: listaT){
            
            modelo.addRow(new Object[] { m.getIdTipo(),m.getCategoria(), m.getCantidadCamas(), m.getCantidadPersonas(), m.getTipoCamas(), m.getPrecio() });
        }
    
}




        


}
